Terminals unused in grammar

   STRING_LIT
   INT_LIT
   ELLIPSIS


Grammar

    0 $accept: program $end

    1 program: classes statements

    2 classes: %empty
    3        | classes class

    4 class: class_signature class_body

    5 class_signature: CLASS IDENT '(' formal_args ')'
    6                | CLASS IDENT '(' formal_args ')' EXTENDS IDENT

    7 formal_args: %empty
    8            | IDENT COLON IDENT args

    9 args: %empty
   10     | args COMMA IDENT COLON IDENT

   11 class_body: %empty
   12           | '{' statements methods '}'

   13 methods: %empty
   14        | methods method

   15 method: DEF IDENT '(' formal_args ')' statement_block
   16       | DEF IDENT '(' formal_args ')' COLON IDENT statement_block

   17 statement_block: '{' statements '}'

   18 statements: %empty
   19           | statements statement

   20 statement: IF r_expr statement_block
   21          | IF r_expr statement_block elseIf ELSE statement_block
   22          | WHILE r_expr statement_block
   23          | r_expr SCOLON
   24          | l_expr GETS r_expr SCOLON
   25          | l_expr COLON IDENT GETS r_expr SCOLON
   26          | RETURN r_expr SCOLON
   27          | RETURN SCOLON

   28 elseIf: %empty
   29       | elseIf ELIF r_expr statement_block

   30 l_expr: IDENT
   31       | r_expr DOT IDENT

   32 r_expr: l_expr
   33       | r_expr MINUS r_expr
   34       | r_expr PLUS r_expr
   35       | r_expr TIMES r_expr
   36       | r_expr DIVIDE r_expr
   37       | MINUS r_expr
   38       | '(' r_expr ')'
   39       | r_expr EQUALS r_expr
   40       | r_expr ATLEAST r_expr
   41       | r_expr ATMOST r_expr
   42       | r_expr LESS r_expr
   43       | r_expr MORE r_expr
   44       | r_expr AND r_expr
   45       | r_expr OR r_expr
   46       | r_expr NOT r_expr
   47       | r_expr DOT IDENT '(' actual_args ')'
   48       | IDENT '(' actual_args ')'

   49 actual_args: %empty
   50            | r_expr
   51            | r_expr COMMA r_expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 15 16 38 47 48
')' (41) 5 6 15 16 38 47 48
'{' (123) 12 17
'}' (125) 12 17
error (256)
PLUS (258) 34
MINUS (259) 33 37
TIMES (260) 35
DIVIDE (261) 36
EQUALS (262) 39
ATMOST (263) 41
ATLEAST (264) 40
LESS (265) 42
MORE (266) 43
STRING_LIT (267)
INT_LIT (268)
ELLIPSIS (269)
DEF (270) 15 16
CLASS (271) 5 6
EXTENDS (272) 6
IF (273) 20 21
ELIF (274) 29
ELSE (275) 21
WHILE (276) 22
RETURN (277) 26 27
GETS (278) 24 25
AND (279) 44
OR (280) 45
NOT (281) 46
SCOLON (282) 23 24 25 26 27
COMMA (283) 10 51
DOT (284) 31 47
COLON (285) 8 10 16 25
IDENT (286) 5 6 8 10 15 16 25 30 31 47 48
NEG (287)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
classes (39)
    on left: 2 3, on right: 1 3
class (40)
    on left: 4, on right: 3
class_signature (41)
    on left: 5 6, on right: 4
formal_args (42)
    on left: 7 8, on right: 5 6 15 16
args (43)
    on left: 9 10, on right: 8 10
class_body (44)
    on left: 11 12, on right: 4
methods (45)
    on left: 13 14, on right: 12 14
method (46)
    on left: 15 16, on right: 14
statement_block (47)
    on left: 17, on right: 15 16 20 21 22 29
statements (48)
    on left: 18 19, on right: 1 12 17 19
statement (49)
    on left: 20 21 22 23 24 25 26 27, on right: 19
elseIf (50)
    on left: 28 29, on right: 21 29
l_expr (51)
    on left: 30 31, on right: 24 25 32
r_expr (52)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48, on right:
    20 21 22 23 24 25 26 29 31 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 50 51
actual_args (53)
    on left: 49 50 51, on right: 47 48


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (classes)

    program  go to state 1
    classes  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: classes . statements
    3 classes: classes . class

    CLASS  shift, and go to state 4

    $default  reduce using rule 18 (statements)

    class            go to state 5
    class_signature  go to state 6
    statements       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 class_signature: CLASS . IDENT '(' formal_args ')'
    6                | CLASS . IDENT '(' formal_args ')' EXTENDS IDENT

    IDENT  shift, and go to state 8


State 5

    3 classes: classes class .

    $default  reduce using rule 3 (classes)


State 6

    4 class: class_signature . class_body

    '{'  shift, and go to state 9

    $default  reduce using rule 11 (class_body)

    class_body  go to state 10


State 7

    1 program: classes statements .
   19 statements: statements . statement

    MINUS   shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    RETURN  shift, and go to state 14
    '('     shift, and go to state 15
    IDENT   shift, and go to state 16

    $default  reduce using rule 1 (program)

    statement  go to state 17
    l_expr     go to state 18
    r_expr     go to state 19


State 8

    5 class_signature: CLASS IDENT . '(' formal_args ')'
    6                | CLASS IDENT . '(' formal_args ')' EXTENDS IDENT

    '('  shift, and go to state 20


State 9

   12 class_body: '{' . statements methods '}'

    $default  reduce using rule 18 (statements)

    statements  go to state 21


State 10

    4 class: class_signature class_body .

    $default  reduce using rule 4 (class)


State 11

   37 r_expr: MINUS . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 23


State 12

   20 statement: IF . r_expr statement_block
   21          | IF . r_expr statement_block elseIf ELSE statement_block

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 24


State 13

   22 statement: WHILE . r_expr statement_block

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 25


State 14

   26 statement: RETURN . r_expr SCOLON
   27          | RETURN . SCOLON

    MINUS   shift, and go to state 11
    '('     shift, and go to state 15
    SCOLON  shift, and go to state 26
    IDENT   shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 27


State 15

   38 r_expr: '(' . r_expr ')'

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 28


State 16

   30 l_expr: IDENT .
   48 r_expr: IDENT . '(' actual_args ')'

    '('  shift, and go to state 29

    $default  reduce using rule 30 (l_expr)


State 17

   19 statements: statements statement .

    $default  reduce using rule 19 (statements)


State 18

   24 statement: l_expr . GETS r_expr SCOLON
   25          | l_expr . COLON IDENT GETS r_expr SCOLON
   32 r_expr: l_expr .

    GETS   shift, and go to state 30
    COLON  shift, and go to state 31

    $default  reduce using rule 32 (r_expr)


State 19

   23 statement: r_expr . SCOLON
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    SCOLON   shift, and go to state 44
    DOT      shift, and go to state 45


State 20

    5 class_signature: CLASS IDENT '(' . formal_args ')'
    6                | CLASS IDENT '(' . formal_args ')' EXTENDS IDENT

    IDENT  shift, and go to state 46

    $default  reduce using rule 7 (formal_args)

    formal_args  go to state 47


State 21

   12 class_body: '{' statements . methods '}'
   19 statements: statements . statement

    MINUS   shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    RETURN  shift, and go to state 14
    '('     shift, and go to state 15
    IDENT   shift, and go to state 16

    $default  reduce using rule 13 (methods)

    methods    go to state 48
    statement  go to state 17
    l_expr     go to state 18
    r_expr     go to state 19


State 22

   32 r_expr: l_expr .

    $default  reduce using rule 32 (r_expr)


State 23

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   37       | MINUS r_expr .
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 37 (r_expr)


State 24

   20 statement: IF r_expr . statement_block
   21          | IF r_expr . statement_block elseIf ELSE statement_block
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    '{'      shift, and go to state 49
    DOT      shift, and go to state 45

    statement_block  go to state 50


State 25

   22 statement: WHILE r_expr . statement_block
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    '{'      shift, and go to state 49
    DOT      shift, and go to state 45

    statement_block  go to state 51


State 26

   27 statement: RETURN SCOLON .

    $default  reduce using rule 27 (statement)


State 27

   26 statement: RETURN r_expr . SCOLON
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    SCOLON   shift, and go to state 52
    DOT      shift, and go to state 45


State 28

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   38       | '(' r_expr . ')'
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    ')'      shift, and go to state 53
    DOT      shift, and go to state 45


State 29

   48 r_expr: IDENT '(' . actual_args ')'

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    $default  reduce using rule 49 (actual_args)

    l_expr       go to state 22
    r_expr       go to state 54
    actual_args  go to state 55


State 30

   24 statement: l_expr GETS . r_expr SCOLON

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 56


State 31

   25 statement: l_expr COLON . IDENT GETS r_expr SCOLON

    IDENT  shift, and go to state 57


State 32

   34 r_expr: r_expr PLUS . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 58


State 33

   33 r_expr: r_expr MINUS . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 59


State 34

   35 r_expr: r_expr TIMES . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 60


State 35

   36 r_expr: r_expr DIVIDE . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 61


State 36

   39 r_expr: r_expr EQUALS . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 62


State 37

   41 r_expr: r_expr ATMOST . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 63


State 38

   40 r_expr: r_expr ATLEAST . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 64


State 39

   42 r_expr: r_expr LESS . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 65


State 40

   43 r_expr: r_expr MORE . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 66


State 41

   44 r_expr: r_expr AND . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 67


State 42

   45 r_expr: r_expr OR . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 68


State 43

   46 r_expr: r_expr NOT . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 69


State 44

   23 statement: r_expr SCOLON .

    $default  reduce using rule 23 (statement)


State 45

   31 l_expr: r_expr DOT . IDENT
   47 r_expr: r_expr DOT . IDENT '(' actual_args ')'

    IDENT  shift, and go to state 70


State 46

    8 formal_args: IDENT . COLON IDENT args

    COLON  shift, and go to state 71


State 47

    5 class_signature: CLASS IDENT '(' formal_args . ')'
    6                | CLASS IDENT '(' formal_args . ')' EXTENDS IDENT

    ')'  shift, and go to state 72


State 48

   12 class_body: '{' statements methods . '}'
   14 methods: methods . method

    DEF  shift, and go to state 73
    '}'  shift, and go to state 74

    method  go to state 75


State 49

   17 statement_block: '{' . statements '}'

    $default  reduce using rule 18 (statements)

    statements  go to state 76


State 50

   20 statement: IF r_expr statement_block .
   21          | IF r_expr statement_block . elseIf ELSE statement_block

    ELIF      reduce using rule 28 (elseIf)
    ELSE      reduce using rule 28 (elseIf)
    $default  reduce using rule 20 (statement)

    elseIf  go to state 77


State 51

   22 statement: WHILE r_expr statement_block .

    $default  reduce using rule 22 (statement)


State 52

   26 statement: RETURN r_expr SCOLON .

    $default  reduce using rule 26 (statement)


State 53

   38 r_expr: '(' r_expr ')' .

    $default  reduce using rule 38 (r_expr)


State 54

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'
   50 actual_args: r_expr .
   51            | r_expr . COMMA r_expr

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    COMMA    shift, and go to state 78
    DOT      shift, and go to state 45

    $default  reduce using rule 50 (actual_args)


State 55

   48 r_expr: IDENT '(' actual_args . ')'

    ')'  shift, and go to state 79


State 56

   24 statement: l_expr GETS r_expr . SCOLON
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    SCOLON   shift, and go to state 80
    DOT      shift, and go to state 45


State 57

   25 statement: l_expr COLON IDENT . GETS r_expr SCOLON

    GETS  shift, and go to state 81


State 58

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   34       | r_expr PLUS r_expr .
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 34 (r_expr)


State 59

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   33       | r_expr MINUS r_expr .
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 33 (r_expr)


State 60

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   35       | r_expr TIMES r_expr .
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    DOT  shift, and go to state 45

    $default  reduce using rule 35 (r_expr)


State 61

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   36       | r_expr DIVIDE r_expr .
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    DOT  shift, and go to state 45

    $default  reduce using rule 36 (r_expr)


State 62

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   39       | r_expr EQUALS r_expr .
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 39 (r_expr)


State 63

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   41       | r_expr ATMOST r_expr .
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQUALS  shift, and go to state 36
    LESS    shift, and go to state 39
    MORE    shift, and go to state 40
    DOT     shift, and go to state 45

    $default  reduce using rule 41 (r_expr)


State 64

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   40       | r_expr ATLEAST r_expr .
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQUALS  shift, and go to state 36
    LESS    shift, and go to state 39
    MORE    shift, and go to state 40
    DOT     shift, and go to state 45

    $default  reduce using rule 40 (r_expr)


State 65

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   42       | r_expr LESS r_expr .
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 42 (r_expr)


State 66

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   43       | r_expr MORE r_expr .
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    DOT     shift, and go to state 45

    $default  reduce using rule 43 (r_expr)


State 67

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   44       | r_expr AND r_expr .
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    DOT      shift, and go to state 45

    $default  reduce using rule 44 (r_expr)


State 68

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   45       | r_expr OR r_expr .
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    DOT      shift, and go to state 45

    $default  reduce using rule 45 (r_expr)


State 69

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   46       | r_expr NOT r_expr .
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    DOT      shift, and go to state 45

    $default  reduce using rule 46 (r_expr)


State 70

   31 l_expr: r_expr DOT IDENT .
   47 r_expr: r_expr DOT IDENT . '(' actual_args ')'

    '('  shift, and go to state 82

    $default  reduce using rule 31 (l_expr)


State 71

    8 formal_args: IDENT COLON . IDENT args

    IDENT  shift, and go to state 83


State 72

    5 class_signature: CLASS IDENT '(' formal_args ')' .
    6                | CLASS IDENT '(' formal_args ')' . EXTENDS IDENT

    EXTENDS  shift, and go to state 84

    $default  reduce using rule 5 (class_signature)


State 73

   15 method: DEF . IDENT '(' formal_args ')' statement_block
   16       | DEF . IDENT '(' formal_args ')' COLON IDENT statement_block

    IDENT  shift, and go to state 85


State 74

   12 class_body: '{' statements methods '}' .

    $default  reduce using rule 12 (class_body)


State 75

   14 methods: methods method .

    $default  reduce using rule 14 (methods)


State 76

   17 statement_block: '{' statements . '}'
   19 statements: statements . statement

    MINUS   shift, and go to state 11
    IF      shift, and go to state 12
    WHILE   shift, and go to state 13
    RETURN  shift, and go to state 14
    '('     shift, and go to state 15
    '}'     shift, and go to state 86
    IDENT   shift, and go to state 16

    statement  go to state 17
    l_expr     go to state 18
    r_expr     go to state 19


State 77

   21 statement: IF r_expr statement_block elseIf . ELSE statement_block
   29 elseIf: elseIf . ELIF r_expr statement_block

    ELIF  shift, and go to state 87
    ELSE  shift, and go to state 88


State 78

   51 actual_args: r_expr COMMA . r_expr

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 89


State 79

   48 r_expr: IDENT '(' actual_args ')' .

    $default  reduce using rule 48 (r_expr)


State 80

   24 statement: l_expr GETS r_expr SCOLON .

    $default  reduce using rule 24 (statement)


State 81

   25 statement: l_expr COLON IDENT GETS . r_expr SCOLON

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 90


State 82

   47 r_expr: r_expr DOT IDENT '(' . actual_args ')'

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    $default  reduce using rule 49 (actual_args)

    l_expr       go to state 22
    r_expr       go to state 54
    actual_args  go to state 91


State 83

    8 formal_args: IDENT COLON IDENT . args

    $default  reduce using rule 9 (args)

    args  go to state 92


State 84

    6 class_signature: CLASS IDENT '(' formal_args ')' EXTENDS . IDENT

    IDENT  shift, and go to state 93


State 85

   15 method: DEF IDENT . '(' formal_args ')' statement_block
   16       | DEF IDENT . '(' formal_args ')' COLON IDENT statement_block

    '('  shift, and go to state 94


State 86

   17 statement_block: '{' statements '}' .

    $default  reduce using rule 17 (statement_block)


State 87

   29 elseIf: elseIf ELIF . r_expr statement_block

    MINUS  shift, and go to state 11
    '('    shift, and go to state 15
    IDENT  shift, and go to state 16

    l_expr  go to state 22
    r_expr  go to state 95


State 88

   21 statement: IF r_expr statement_block elseIf ELSE . statement_block

    '{'  shift, and go to state 49

    statement_block  go to state 96


State 89

   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'
   51 actual_args: r_expr COMMA r_expr .

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    DOT      shift, and go to state 45

    $default  reduce using rule 51 (actual_args)


State 90

   25 statement: l_expr COLON IDENT GETS r_expr . SCOLON
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    SCOLON   shift, and go to state 97
    DOT      shift, and go to state 45


State 91

   47 r_expr: r_expr DOT IDENT '(' actual_args . ')'

    ')'  shift, and go to state 98


State 92

    8 formal_args: IDENT COLON IDENT args .
   10 args: args . COMMA IDENT COLON IDENT

    COMMA  shift, and go to state 99

    $default  reduce using rule 8 (formal_args)


State 93

    6 class_signature: CLASS IDENT '(' formal_args ')' EXTENDS IDENT .

    $default  reduce using rule 6 (class_signature)


State 94

   15 method: DEF IDENT '(' . formal_args ')' statement_block
   16       | DEF IDENT '(' . formal_args ')' COLON IDENT statement_block

    IDENT  shift, and go to state 46

    $default  reduce using rule 7 (formal_args)

    formal_args  go to state 100


State 95

   29 elseIf: elseIf ELIF r_expr . statement_block
   31 l_expr: r_expr . DOT IDENT
   33 r_expr: r_expr . MINUS r_expr
   34       | r_expr . PLUS r_expr
   35       | r_expr . TIMES r_expr
   36       | r_expr . DIVIDE r_expr
   39       | r_expr . EQUALS r_expr
   40       | r_expr . ATLEAST r_expr
   41       | r_expr . ATMOST r_expr
   42       | r_expr . LESS r_expr
   43       | r_expr . MORE r_expr
   44       | r_expr . AND r_expr
   45       | r_expr . OR r_expr
   46       | r_expr . NOT r_expr
   47       | r_expr . DOT IDENT '(' actual_args ')'

    PLUS     shift, and go to state 32
    MINUS    shift, and go to state 33
    TIMES    shift, and go to state 34
    DIVIDE   shift, and go to state 35
    EQUALS   shift, and go to state 36
    ATMOST   shift, and go to state 37
    ATLEAST  shift, and go to state 38
    LESS     shift, and go to state 39
    MORE     shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    NOT      shift, and go to state 43
    '{'      shift, and go to state 49
    DOT      shift, and go to state 45

    statement_block  go to state 101


State 96

   21 statement: IF r_expr statement_block elseIf ELSE statement_block .

    $default  reduce using rule 21 (statement)


State 97

   25 statement: l_expr COLON IDENT GETS r_expr SCOLON .

    $default  reduce using rule 25 (statement)


State 98

   47 r_expr: r_expr DOT IDENT '(' actual_args ')' .

    $default  reduce using rule 47 (r_expr)


State 99

   10 args: args COMMA . IDENT COLON IDENT

    IDENT  shift, and go to state 102


State 100

   15 method: DEF IDENT '(' formal_args . ')' statement_block
   16       | DEF IDENT '(' formal_args . ')' COLON IDENT statement_block

    ')'  shift, and go to state 103


State 101

   29 elseIf: elseIf ELIF r_expr statement_block .

    $default  reduce using rule 29 (elseIf)


State 102

   10 args: args COMMA IDENT . COLON IDENT

    COLON  shift, and go to state 104


State 103

   15 method: DEF IDENT '(' formal_args ')' . statement_block
   16       | DEF IDENT '(' formal_args ')' . COLON IDENT statement_block

    '{'    shift, and go to state 49
    COLON  shift, and go to state 105

    statement_block  go to state 106


State 104

   10 args: args COMMA IDENT COLON . IDENT

    IDENT  shift, and go to state 107


State 105

   16 method: DEF IDENT '(' formal_args ')' COLON . IDENT statement_block

    IDENT  shift, and go to state 108


State 106

   15 method: DEF IDENT '(' formal_args ')' statement_block .

    $default  reduce using rule 15 (method)


State 107

   10 args: args COMMA IDENT COLON IDENT .

    $default  reduce using rule 10 (args)


State 108

   16 method: DEF IDENT '(' formal_args ')' COLON IDENT . statement_block

    '{'  shift, and go to state 49

    statement_block  go to state 109


State 109

   16 method: DEF IDENT '(' formal_args ')' COLON IDENT statement_block .

    $default  reduce using rule 16 (method)
